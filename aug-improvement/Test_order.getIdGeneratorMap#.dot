digraph "Test_order.getIdGeneratorMap#" {
0 [label="public String getIdGeneratorMap(){\l  StringBuilder sb=new StringBuilder();\l  for (  Map.Entry<String,List<Replacement>> entry : idGeneratorMaps.entrySet()) {\l    sb.append(\"[\");\l    sb.append(entry.getKey());\l    sb.append(\"]\n\n\");\l    for (    Replacement replacement : entry.getValue()) {\l      sb.append(replacement.toString());\l      sb.append(\"\n\");\l    }\l    sb.append(\"\n\");\l  }\l  return sb.toString();\l}\l\l" shape=box style=dotted]
1 [label="AbstractStringBuilder.append()" shape=box]
2 [label="AbstractStringBuilder.append()" shape=box]
3 [label="AbstractStringBuilder.append()" shape=box]
4 [label="AbstractStringBuilder.append()" shape=box]
5 [label="AbstractStringBuilder.append()" shape=box]
6 [label="AbstractStringBuilder.append()" shape=box]
7 [label="Entry.getKey()" shape=box]
8 [label="Entry.getValue()" shape=box]
9 [label="Object.toString()" shape=box]
10 [label="Replacement.toString()" shape=box]
11 [label="UNKNOWN.entrySet()" shape=box]
10 -> 2 [label="order" style=dotted];
2 -> 3 [label="order" style=dotted];
1 -> 4 [label="order" style=dotted];
7 -> 4 [label="order" style=dotted];
3 -> 5 [label="order" style=dotted];
4 -> 6 [label="order" style=dotted];
1 -> 7 [label="order" style=dotted];
6 -> 8 [label="order" style=dotted];
5 -> 9 [label="order" style=dotted];
}